{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start二级标题测试Create a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment /image (6).png)","link":"/2020/03/01/hello-world/"},{"title":"超级详细Hexo+GitHub+阿里云域名的博客搭建教程","text":"​ 摸索了挺长时间建网站建博客等东西，最初我是从买阿里云服务器和域名开始了解这些的，也用宝塔搭过网站，觉得这些东西还挺有意思的，最开始我用过宝塔的一键部署wordpress博客，感觉挺爽，拥有的自己的博客，但直到我知道有Hexo这种静态博客框架后我才明白这才是真正的搭建博客。 ​ 下面就来让我分享一下我这一段时间摸索出来的皮毛经验——关于搭建Hexo静态博客 ​ 跟着我一步一步来做，你马上就有自己的博客啦！ 开始 一，首先安装前提软件环境 node.js 和 Git ​ 安装软件比较简单，正常安装就行，我就不多赘述，下面是安装地址，不懂得可以看看别的博主的的教程。 ​ node.j安装地址: https://nodejs.org/zh-cn/ ​ node.js安装教程:https://blog.csdn.net/qq_42543312/article/details/82191357 ​ Git安装地址:https://git-scm.com/ Git安装教程:https://www.cnblogs.com/xueweisuoyong/archive/2019/11/22/11914045.html ​ 安装完成我们可以在桌面右键，点击Git Bash Here ，分别输入以下命令，如果出现对应版本的信息，证明我们的node.js和Git安装正常可用，另外说一下 其实npm是nodejs的包管理器（package manager），能解决node.js代码部署上的很多问题,我们在安装时用到的都是npm命令。npm -v证明我们的包管理器也安装成功。 123git versionnode -vnpm -v 二，安装Hexo以上步骤成功后就可以进行Hexo的安装了，用npm 安装 Hexo，输入以下命令 1npm install hexo-cli -g 以上表示hexo安装成功，hexo默认会被安装到C盘这个不用管 三，本地搭建Hexo 下一步选择一个本地目录开始创建博客 输入以下命令，注意：blog是你在当前目录下进行hexo安装的文件夹，随便叫什么你自己起名，这个文件夹会自动生成。 1hexo init blog 输入完命令后我们可以看到自己刚才进入的本地目录下创建了一个“blog”文件夹，这就是hexo的本地博客文件 此时我们继续输入下一条命令：此命令用来补充一些hexo博客的依赖 1hexo install 到此为止我们的hexo博客本地文件就准备好了 下一步我们开启hexo本地服务,启动服务器 123$ hexo server#或者可以简写为$ hexo s hexo服务默认开放4000端口，现在快打开浏览器访问http://localhost:4000就可以看到你的博客啦！ 是不是感觉wc ，wfk ！ 好神奇啊，啊哈哈哈哈！ 四，GitHub部署Hexo 既然在github上部署博客，首先你的有一个自己的github账号 github官网: https://github.com/ 正常注册即可，然后在这里点击新建一个仓库. 这里注意，仓库名格式一定要为 你的用户名.github.io （注意是注册时的用户名而不是昵称） 这里非常重要，例如注册用户名为：xiaoming ，那仓库名一定要设置为 xiaoming.github.io ，接着点击Create Repository 接着我们回到命令行，输入以下命令，在git终端分别配置自己的用户名和邮箱。命令如下:12git config --global user.name XXX # XXX表示你github注册时的用户名git config --global user.email XXX # XXX表示你github注册时的邮箱 接着输入以下命令生成密钥：12ssh-keygen -t rsa -C &quot;Github上你注册的邮箱地址&quot; 冒号后边就输入空格，y/n 输入y 接着我们在该目录下能找到id_rsa.pub,这里存储的就是我们的密钥，打开复制所有内容 然后我们回到GitHub 点击Setting —&gt; SSH and GPG keys —&gt; New SSHkey 将密钥复制到文本框内 ，保存 ， Tittle随便起。 接着到了很关键的一步是我们要到刚才本地部署博客文件根目录下去修改一下_config.yml配置文件: 我用的编辑器是VScode ，其他的都可以，不影响，打开后我们会看到密密麻麻的配置信息，不用慌，我们只需要在配置信息的最下方改成如下配置 12345678deploy: type: 'git' repo: https://github.com/yourname/yourname.github.io.git branch: master#需要注意的是：#1、冒号后面一定要有一个空格#2、type，repository，branch的首字母要对齐 至于仓库地址怎么找，如果不会我再多啰嗦一下，会的就跳过吧 复制地址，注意选HTTP地址 或者SSH地址都可以 最后我们开始部署输入以下命令行： 123456789101112#要安装一个部署插件hexo-deployer-git。npm install hexo-deployer-git --save#生成静态文件g 是 generate 缩写hexo g#部署，d 是 deploy 缩写：hexo d#或者将二、三句结合为hexo g -d 第一次部署需要输入github用户名和密码 此时我们可以看到在我们的仓库中多出了很多文件 以上过程证明我们在GitHub部署成功，我们直接何以通过github地址访问了 ​ https://1819597376.github.io/ ​ 到此你就拥有你自己的个人网络博客了，兴奋吗铁子？ 五，绑定域名1，购买域名​ 首先你需要拥有自己的域名，这里先把域名做一下解释 ​ 域名（英语：Domain Name），又称网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识（有时也指地理位置）。由于IP地址具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过网域名称系统（DNS，Domain Name System）来将域名和IP地址相互映射，使人更方便地访问互联网，而不用去记住能够被机器直接读取的IP地址数串。 ​ 简单多就是因为github的地址太长或服务器的公网IP全数字不好记，我们需要一个好记的地址也就这我们的需要的域名来与自己的github仓库地址来做一个捆绑，通过这个好记的域名来访问我们的网站或者博客，比如我们要访问百度时在浏览器地址栏直接搜做 baidu.com 就可访问百度网页而不是输入长长的IP地址。这种绑定关系会存储在DNS中，即域名系统（服务）协议。 ​ 这也是我们要做域名绑定的目的，购买就不多赘述，因为我的域名是阿里云购买，这里我仅以阿里云平台的域名进行介绍，如果想买其他平台的域名也可以，我们的操作流程大同小异，不会就看下面这个购买教程 域名购买教程 : https://www.jianshu.com/p/e11a136ebd02 2，域名解析​ 拥有域名后，我要对域名进行解析操作来实现域名和我们仓库地址的绑定。 ​ 我们要添加两条记录 ​ 保存后得到这两条记录即可： 接下来回到github仓库，创建一个名为CNAME的文件，内容为你的域名： ​ 就在此刻奇迹发生了 就这样了，完美结束，写的我好累啊哈哈哈，感谢使用此教程，也为你成功搭建Hexo博客而感到高兴！ ​ 我的博客： trouble.com 最后寄语​ 没有人天生什么都会 ​ 不说所有人都是天才 ​ 如果你不是 ​ 就请停止幻想 脚踏实地吧 ​ 学 IT就不要害怕犯错 错误越多越好 ​ 再见","link":"/2020/03/10/%E8%B6%85%E7%BA%A7%E8%AF%A6%E7%BB%86Hexo-GitHub-%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"},{"title":"test2","text":"","link":"/2020/03/10/node.js&Git/"},{"title":"一个“.java”文件中是否可以包含多个类（这里不内部类不算），有什么限制？","text":"一个“.java”文件中是否可以包含多个类（这里不内部类不算），有什么限制？*答案：可以包含多个类，但是只能由一个public类 * ​ java文件中完全可以有多个类，我指的是即使不算内部类这一说，也可以定义有多个类，但是有一点限制就是一个“.java”文件中只能有一个被public修饰的公共类，仅有一个，这样设计的意义是基于面向对象思想的基础上，我们能保证一个类只有一个公开接口。一个“.java”文件也就是一个Java程序被称为一个编译单元，如果文件中有多个public权限的类则编译器将不知道从哪里进入，因而报错。 ​ 那么其他非public类有什么用吗其实我们的public类就像是一个团队的老大且实门面担当，而其他类就是在他背后默默付出却不被人所知的小弟们，意思是，内部类在包外是不能被看见的（不能被调用），他的作用就是为public类提供支持。","link":"/2020/03/13/%E4%B8%80%E4%B8%AA%E2%80%9C-java%E2%80%9D%E6%96%87%E4%BB%B6%E4%B8%AD%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E5%8C%85%E5%90%AB%E5%A4%9A%E4%B8%AA%E7%B1%BB%EF%BC%88%E8%BF%99%E9%87%8C%E4%B8%8D%E5%86%85%E9%83%A8%E7%B1%BB%E4%B8%8D%E7%AE%97%EF%BC%89%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E9%99%90%E5%88%B6%EF%BC%9F/"}],"tags":[],"categories":[]}